/// <reference types="node" />
/// <reference types="node" />
import { ApiSettings } from "./apiSettings";
import { IncomingMessage, ClientRequest } from "http";
import { RequestOptions } from "https";
export interface EndpointResponse {
    messageObj: IncomingMessage;
    data: {
        [key: string]: any;
    };
}
/**
 * Base endpoint for the Mindee API.
 */
export declare abstract class BaseEndpoint {
    /** Settings relating to the API. */
    settings: ApiSettings;
    protected constructor(settings: ApiSettings);
    /**
     * Reads a response from the API and processes it.
     * @param options options related to the request itself.
     * @param resolve the resolved response
     * @param reject promise rejection reason.
     * @returns the processed request.
     */
    protected readResponse(options: RequestOptions, resolve: (value: EndpointResponse | PromiseLike<EndpointResponse>) => void, reject: (reason?: any) => void): ClientRequest;
}
