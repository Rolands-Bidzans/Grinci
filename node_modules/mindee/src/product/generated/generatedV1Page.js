"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GeneratedV1Page = void 0;
const generated_1 = require("../../../src/parsing/generated");
const standard_1 = require("../../../src/parsing/standard");
const generatedV1Prediction_1 = require("./generatedV1Prediction");
/**
 * Generated V1 page prediction results.
 */
class GeneratedV1Page extends generatedV1Prediction_1.GeneratedV1Prediction {
    constructor(rawPrediction, pageId) {
        super();
        Object.entries(rawPrediction).forEach(([fieldName, fieldValue]) => {
            if (Array.isArray(fieldValue)) {
                this.fields.set(fieldName, new generated_1.GeneratedListField({ prediction: fieldValue, pageId: pageId }));
            }
            else if (typeof fieldValue === "object" && fieldValue !== null && (0, generated_1.isGeneratedObject)(fieldValue)) {
                this.fields.set(fieldName, new generated_1.GeneratedObjectField({ prediction: fieldValue, pageId: pageId }));
            }
            else {
                const fieldValueStr = fieldValue;
                if (Object.prototype.hasOwnProperty.call(fieldValueStr, "value") && fieldValueStr["value"] !== null) {
                    fieldValueStr["value"] = fieldValueStr["value"].toString();
                }
                this.fields.set(fieldName, new standard_1.StringField({ prediction: fieldValueStr, pageId: pageId }));
            }
        });
    }
}
exports.GeneratedV1Page = GeneratedV1Page;
